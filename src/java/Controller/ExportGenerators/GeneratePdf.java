/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Controller.ExportGenerators;

import java.util.ArrayList;
import java.io.*;
import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.util.Date;

/**
 *
 * @author Laura
 */
public class GeneratePdf {
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
      Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
      Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
      Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
      Font.BOLD);
  
    public static void generatePdfFile(ArrayList<String[]> temp_table){
       try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(new File("export.pdf")));
            document.open();
            addMetaData(document);
            addTitlePage(document);
            addContent(document, temp_table);
            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private static void addMetaData(Document document) {
        document.addTitle("Export to PDF");
        document.addSubject("Using iText");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("Laura Vandendoorent");
        document.addCreator("Laura Vandendoorent");
    }
    
    private static void addTitlePage(Document document)
      throws DocumentException {
            Paragraph preface = new Paragraph();
            // We add one empty line
            addEmptyLine(preface, 1);
            // Lets write a big header
            preface.add(new Paragraph("Export of the project MyVibe", catFont));

            addEmptyLine(preface, 1);
            // Will create: Report generated by: _name, _date
            preface.add(new Paragraph("Report generated by: Laura Vandendoorent, " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
            smallBold));
            addEmptyLine(preface, 3);
            preface.add(new Paragraph("This document describes an export of our database ",
            smallBold));

            addEmptyLine(preface, 8);

            preface.add(new Paragraph("This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.com ;-).",
            redFont));

            document.add(preface);
        // Start a new page
        document.newPage();
    }
    
    private static void addContent(Document document, ArrayList <String[]> temp_table) throws DocumentException {
        Anchor anchor = new Anchor("Hoofdstuk 1", catFont);
        anchor.setName("Hoofdstuk 1");

        // Second parameter is the number of the chapter
        Chapter catPart = new Chapter(new Paragraph(anchor), 1);

        Paragraph subPara = new Paragraph("There is only one export", subFont);
        Section subCatPart = catPart.addSection(subPara);
        subPara = new Paragraph("The export", subFont);
        subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("Paragraph"));
        // add a table
        createTable(subCatPart, temp_table);

        // now add all this to the document
        document.add(catPart);
    }
    
    private static void createTable(Section subCatPart, ArrayList <String[]> temp_table)
      throws BadElementException {
        int aantalkolommen = 0; 
        for(int i=0; i <temp_table.get(0).length; i++){
            if(temp_table.get(0)[i] != null){
                aantalkolommen ++; 
            }
        }
        PdfPTable table = new PdfPTable(aantalkolommen);

        // t.setBorderColor(BaseColor.GRAY);
        // t.setPadding(4);
        // t.setSpacing(4);
        // t.setBorderWidth(1);
      
        
        for(int i=0; i<temp_table.get(0).length; i++){
            
                if(temp_table.get(0)[i] != null){
                    PdfPCell c1 = new PdfPCell(new Phrase(temp_table.get(0)[i]));
                    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
                    table.addCell(c1);
                }
                 
        }    
        table.setHeaderRows(1);
        for (int j = 1; j < temp_table.size(); j++) {
            for(int i=0; i<temp_table.get(j).length; i++){
                if(temp_table.get(j)[i] != null){
                    table.addCell(temp_table.get(j)[i]);
                }
            }
        }
        subCatPart.add(table);

    }
    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}
